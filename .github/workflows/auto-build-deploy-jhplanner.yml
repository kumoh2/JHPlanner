name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Cache .NET Core dependencies
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x.x'

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3.1

    - name: Restore dependencies
      run: dotnet restore ${{env.Solution_Name}} --runtime win-x64

    #- name: Build with MSBuild
    #  run: msbuild ${{env.Solution_Name}} /p:Configuration=Release /p:Platform="x64" /p:WindowsPackageType=None

    - name: Build
      run: dotnet build ${{env.Solution_Name}} --configuration Release --framework net8.0-windows10.0.22621.0 -p:WindowsPackageType=None -p:EnableMsixTooling=true

    #- name: Publish with MSBuild
    #  run: msbuild ${{env.Solution_Name}} /p:Configuration=Release /p:Platform="x64" /p:WindowsPackageType=None /p:PublishSingleFile=True /p:PublishReadyToRun=True /p:RuntimeIdentifier=win-x64 /p:SelfContained=False /p:PublishDir=${{ github.workspace }}/Publish

    - name: Publish
      run: dotnet publish jhplanner\jhplanner.csproj --configuration Release --framework net8.0-windows10.0.22621.0 --runtime win-x64 --self-contained false -p:PublishSingleFile=true -p:PublishReadyToRun=true --output ./Publish

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Published App
        path: ./Publish

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: "New release of jhplanner"
      if: startsWith(github.ref, 'refs/tags/')

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Publish/jhplanner.exe
        asset_name: jhplanner.exe
        asset_content_type: application/octet-stream
      if: startsWith(github.ref, 'refs/tags/')

env:
  Solution_Name: jhplanner.sln
